#!/bin/bash

BASEURL='https://us-east.manta.joyent.com'
MANTA_PATH='/Joyent_Dev/public/releng/sdcnode'
BRANCH='master'
IMAGE=$1
VARIANT=$2
OUTDIR=$3

if [[ -z $IMAGE || -z $VARIANT || -z $OUTDIR ]]; then
	printf 'ERROR: usage: download_sdcnode IMAGE VARIANT OUTDIR\n' 2>&1
	exit 1
fi

HAS_JSON=$(command -v json)
if [[ -z "$HAS_JSON" ]]; then
	printf 'ERROR: "json" command not found in $PATH'
	exit 1
fi

FULLURL="$BASEURL/$MANTA_PATH/$IMAGE/$BRANCH-latest"
TARGET="sdcnode-$VARIANT-$IMAGE.tar.gz"

#
# We assume $FULLURL points to a Manta object that contains a path to
# the actual branch Manta directory.
#
if ! manta_path=$(curl -sSfL "$FULLURL") || [[ -z "$manta_path" ]]; then
	printf "ERROR: could not determine manta_path url for $FULLURL\n" >&2
	exit 1
else
	FULLURL="$BASEURL/$manta_path/sdcnode"
fi

#
# Now download the Manta directory index which lists the current set of
# available sdcnode builds. Note that this is assumed to be an
# application/x-json-stream with one json record per line.
#
if ! list=$(curl -sSfL "$FULLURL" | json -ag name) || [[ -z "$list" ]]; then
	printf 'ERROR: could not download index page\n' >&2
	exit 1
fi

#
# Using only commonly found household items, extract the full name of the
# sdcnode tar archive we need.
#
# One word to describe this process might be "brittle".
#
if ! name=$(awk -v "v=$VARIANT" -v "b=$BRANCH" -v "i=$IMAGE" -F\" '
    BEGIN { pattern = "^sdcnode-"v"-"i"-"b"-.*.tgz$"; }
    $1 ~ pattern { print $1 }' <<< "$list") ||
    [[ -z "$name" ]]; then
	printf 'ERROR: could not locate file name in index page\n' >&2
	exit 1
fi

if [[ ! -f $OUTDIR/$name ]]; then
	#
	# If the full file name of the latest sdcnode build does not exist,
	# download it now to a temporary file.  If it succeeds, move it into
	# place.
	#
	if ! curl -sSf -o "$OUTDIR/.tmp.$name" "$FULLURL/$name"; then
		printf 'ERROR: could not download sdcnode' >&2
		rm -f "$OUTPUT.tmp"
		exit 1
	fi

	if ! mv "$OUTDIR/.tmp.$name" "$OUTDIR/$name"; then
		exit 1
	fi
fi

#
# Make sure the target link points at the correct file:
#
rm -f "$OUTDIR/$TARGET"
if ! ln -s "$name" "$OUTDIR/$TARGET"; then
	printf 'ERROR: could not create target link\n' >&2
	exit 1
fi

exit 0
